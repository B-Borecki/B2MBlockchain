// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: blockchain.proto
// Protobuf C++ Version: 5.28.3

#include "blockchain.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace BlockchainProto {

inline constexpr Transaction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sender_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        receiver_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Transaction::Transaction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransactionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionDefaultTypeInternal() {}
  union {
    Transaction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionDefaultTypeInternal _Transaction_default_instance_;

inline constexpr Block::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : t_actions_lst_{},
        id_block_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_prev_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nonce_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Block::Block(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockDefaultTypeInternal() {}
  union {
    Block _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockDefaultTypeInternal _Block_default_instance_;

inline constexpr Blockchain::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : chain_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Blockchain::Blockchain(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockchainDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockchainDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockchainDefaultTypeInternal() {}
  union {
    Blockchain _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockchainDefaultTypeInternal _Blockchain_default_instance_;
}  // namespace BlockchainProto
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_blockchain_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_blockchain_2eproto = nullptr;
const ::uint32_t
    TableStruct_blockchain_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Transaction, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Transaction, _impl_.sender_id_),
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Transaction, _impl_.receiver_id_),
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Transaction, _impl_.amount_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Block, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Block, _impl_.id_block_),
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Block, _impl_.id_prev_),
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Block, _impl_.nonce_),
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Block, _impl_.t_actions_lst_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Blockchain, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BlockchainProto::Blockchain, _impl_.chain_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::BlockchainProto::Transaction)},
        {11, -1, -1, sizeof(::BlockchainProto::Block)},
        {23, -1, -1, sizeof(::BlockchainProto::Blockchain)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::BlockchainProto::_Transaction_default_instance_._instance,
    &::BlockchainProto::_Block_default_instance_._instance,
    &::BlockchainProto::_Blockchain_default_instance_._instance,
};
const char descriptor_table_protodef_blockchain_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020blockchain.proto\022\017BlockchainProto\"E\n\013T"
    "ransaction\022\021\n\tsender_id\030\001 \001(\t\022\023\n\013receive"
    "r_id\030\002 \001(\t\022\016\n\006amount\030\003 \001(\001\"n\n\005Block\022\020\n\010i"
    "d_block\030\001 \001(\t\022\017\n\007id_prev\030\002 \001(\t\022\r\n\005nonce\030"
    "\003 \001(\005\0223\n\rt_actions_lst\030\004 \003(\0132\034.Blockchai"
    "nProto.Transaction\"3\n\nBlockchain\022%\n\005chai"
    "n\030\001 \003(\0132\026.BlockchainProto.Blockb\006proto3"
};
static ::absl::once_flag descriptor_table_blockchain_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_blockchain_2eproto = {
    false,
    false,
    279,
    descriptor_table_protodef_blockchain_2eproto,
    "blockchain.proto",
    &descriptor_table_blockchain_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_blockchain_2eproto::offsets,
    file_level_enum_descriptors_blockchain_2eproto,
    file_level_service_descriptors_blockchain_2eproto,
};
namespace BlockchainProto {
// ===================================================================

class Transaction::_Internal {
 public:
};

Transaction::Transaction(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BlockchainProto.Transaction)
}
inline PROTOBUF_NDEBUG_INLINE Transaction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::BlockchainProto::Transaction& from_msg)
      : sender_id_(arena, from.sender_id_),
        receiver_id_(arena, from.receiver_id_),
        _cached_size_{0} {}

Transaction::Transaction(
    ::google::protobuf::Arena* arena,
    const Transaction& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Transaction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.amount_ = from._impl_.amount_;

  // @@protoc_insertion_point(copy_constructor:BlockchainProto.Transaction)
}
inline PROTOBUF_NDEBUG_INLINE Transaction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sender_id_(arena),
        receiver_id_(arena),
        _cached_size_{0} {}

inline void Transaction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
Transaction::~Transaction() {
  // @@protoc_insertion_point(destructor:BlockchainProto.Transaction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Transaction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sender_id_.Destroy();
  _impl_.receiver_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Transaction::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Transaction_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Transaction::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Transaction>(),
            ::google::protobuf::Message::GetNewImpl<Transaction>(),
            ::google::protobuf::Message::GetClearImpl<Transaction>(), &Transaction::ByteSizeLong,
                &Transaction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Transaction, _impl_._cached_size_),
            false,
        },
        &Transaction::kDescriptorMethods,
        &descriptor_table_blockchain_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Transaction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2> Transaction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BlockchainProto::Transaction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sender_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Transaction, _impl_.sender_id_)}},
    // string receiver_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Transaction, _impl_.receiver_id_)}},
    // double amount = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Transaction, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sender_id = 1;
    {PROTOBUF_FIELD_OFFSET(Transaction, _impl_.sender_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string receiver_id = 2;
    {PROTOBUF_FIELD_OFFSET(Transaction, _impl_.receiver_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double amount = 3;
    {PROTOBUF_FIELD_OFFSET(Transaction, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\33\11\13\0\0\0\0\0"
    "BlockchainProto.Transaction"
    "sender_id"
    "receiver_id"
  }},
};

PROTOBUF_NOINLINE void Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:BlockchainProto.Transaction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_id_.ClearToEmpty();
  _impl_.receiver_id_.ClearToEmpty();
  _impl_.amount_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Transaction::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Transaction& this_ = static_cast<const Transaction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Transaction::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Transaction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:BlockchainProto.Transaction)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string sender_id = 1;
          if (!this_._internal_sender_id().empty()) {
            const std::string& _s = this_._internal_sender_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BlockchainProto.Transaction.sender_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string receiver_id = 2;
          if (!this_._internal_receiver_id().empty()) {
            const std::string& _s = this_._internal_receiver_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BlockchainProto.Transaction.receiver_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // double amount = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_amount()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_amount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:BlockchainProto.Transaction)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Transaction::ByteSizeLong(const MessageLite& base) {
          const Transaction& this_ = static_cast<const Transaction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Transaction::ByteSizeLong() const {
          const Transaction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:BlockchainProto.Transaction)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string sender_id = 1;
            if (!this_._internal_sender_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender_id());
            }
            // string receiver_id = 2;
            if (!this_._internal_receiver_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_receiver_id());
            }
            // double amount = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_amount()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Transaction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Transaction*>(&to_msg);
  auto& from = static_cast<const Transaction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BlockchainProto.Transaction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender_id().empty()) {
    _this->_internal_set_sender_id(from._internal_sender_id());
  }
  if (!from._internal_receiver_id().empty()) {
    _this->_internal_set_receiver_id(from._internal_receiver_id());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_amount()) != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Transaction::CopyFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BlockchainProto.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Transaction::InternalSwap(Transaction* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_id_, &other->_impl_.sender_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.receiver_id_, &other->_impl_.receiver_id_, arena);
        swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata Transaction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Block::_Internal {
 public:
};

Block::Block(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BlockchainProto.Block)
}
inline PROTOBUF_NDEBUG_INLINE Block::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::BlockchainProto::Block& from_msg)
      : t_actions_lst_{visibility, arena, from.t_actions_lst_},
        id_block_(arena, from.id_block_),
        id_prev_(arena, from.id_prev_),
        _cached_size_{0} {}

Block::Block(
    ::google::protobuf::Arena* arena,
    const Block& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Block* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.nonce_ = from._impl_.nonce_;

  // @@protoc_insertion_point(copy_constructor:BlockchainProto.Block)
}
inline PROTOBUF_NDEBUG_INLINE Block::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : t_actions_lst_{visibility, arena},
        id_block_(arena),
        id_prev_(arena),
        _cached_size_{0} {}

inline void Block::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.nonce_ = {};
}
Block::~Block() {
  // @@protoc_insertion_point(destructor:BlockchainProto.Block)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Block::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_block_.Destroy();
  _impl_.id_prev_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Block::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Block_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Block::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Block>(),
            ::google::protobuf::Message::GetNewImpl<Block>(),
            ::google::protobuf::Message::GetClearImpl<Block>(), &Block::ByteSizeLong,
                &Block::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Block, _impl_._cached_size_),
            false,
        },
        &Block::kDescriptorMethods,
        &descriptor_table_blockchain_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Block::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 45, 2> Block::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BlockchainProto::Block>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .BlockchainProto.Transaction t_actions_lst = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.t_actions_lst_)}},
    // string id_block = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.id_block_)}},
    // string id_prev = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.id_prev_)}},
    // int32 nonce = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Block, _impl_.nonce_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.nonce_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id_block = 1;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.id_block_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id_prev = 2;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.id_prev_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 nonce = 3;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.nonce_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .BlockchainProto.Transaction t_actions_lst = 4;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.t_actions_lst_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::BlockchainProto::Transaction>()},
  }}, {{
    "\25\10\7\0\0\0\0\0"
    "BlockchainProto.Block"
    "id_block"
    "id_prev"
  }},
};

PROTOBUF_NOINLINE void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:BlockchainProto.Block)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.t_actions_lst_.Clear();
  _impl_.id_block_.ClearToEmpty();
  _impl_.id_prev_.ClearToEmpty();
  _impl_.nonce_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Block::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Block& this_ = static_cast<const Block&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Block::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Block& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:BlockchainProto.Block)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id_block = 1;
          if (!this_._internal_id_block().empty()) {
            const std::string& _s = this_._internal_id_block();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BlockchainProto.Block.id_block");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string id_prev = 2;
          if (!this_._internal_id_prev().empty()) {
            const std::string& _s = this_._internal_id_prev();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BlockchainProto.Block.id_prev");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 nonce = 3;
          if (this_._internal_nonce() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_nonce(), target);
          }

          // repeated .BlockchainProto.Transaction t_actions_lst = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_t_actions_lst_size());
               i < n; i++) {
            const auto& repfield = this_._internal_t_actions_lst().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:BlockchainProto.Block)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Block::ByteSizeLong(const MessageLite& base) {
          const Block& this_ = static_cast<const Block&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Block::ByteSizeLong() const {
          const Block& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:BlockchainProto.Block)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .BlockchainProto.Transaction t_actions_lst = 4;
             {
              total_size += 1UL * this_._internal_t_actions_lst_size();
              for (const auto& msg : this_._internal_t_actions_lst()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string id_block = 1;
            if (!this_._internal_id_block().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id_block());
            }
            // string id_prev = 2;
            if (!this_._internal_id_prev().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id_prev());
            }
            // int32 nonce = 3;
            if (this_._internal_nonce() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_nonce());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Block::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Block*>(&to_msg);
  auto& from = static_cast<const Block&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BlockchainProto.Block)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_t_actions_lst()->MergeFrom(
      from._internal_t_actions_lst());
  if (!from._internal_id_block().empty()) {
    _this->_internal_set_id_block(from._internal_id_block());
  }
  if (!from._internal_id_prev().empty()) {
    _this->_internal_set_id_prev(from._internal_id_prev());
  }
  if (from._internal_nonce() != 0) {
    _this->_impl_.nonce_ = from._impl_.nonce_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BlockchainProto.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Block::InternalSwap(Block* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.t_actions_lst_.InternalSwap(&other->_impl_.t_actions_lst_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_block_, &other->_impl_.id_block_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_prev_, &other->_impl_.id_prev_, arena);
        swap(_impl_.nonce_, other->_impl_.nonce_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Blockchain::_Internal {
 public:
};

Blockchain::Blockchain(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BlockchainProto.Blockchain)
}
inline PROTOBUF_NDEBUG_INLINE Blockchain::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::BlockchainProto::Blockchain& from_msg)
      : chain_{visibility, arena, from.chain_},
        _cached_size_{0} {}

Blockchain::Blockchain(
    ::google::protobuf::Arena* arena,
    const Blockchain& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Blockchain* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:BlockchainProto.Blockchain)
}
inline PROTOBUF_NDEBUG_INLINE Blockchain::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : chain_{visibility, arena},
        _cached_size_{0} {}

inline void Blockchain::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Blockchain::~Blockchain() {
  // @@protoc_insertion_point(destructor:BlockchainProto.Blockchain)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Blockchain::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Blockchain::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Blockchain_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Blockchain::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Blockchain>(),
            ::google::protobuf::Message::GetNewImpl<Blockchain>(),
            ::google::protobuf::Message::GetClearImpl<Blockchain>(), &Blockchain::ByteSizeLong,
                &Blockchain::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Blockchain, _impl_._cached_size_),
            false,
        },
        &Blockchain::kDescriptorMethods,
        &descriptor_table_blockchain_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Blockchain::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Blockchain::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BlockchainProto::Blockchain>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .BlockchainProto.Block chain = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Blockchain, _impl_.chain_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .BlockchainProto.Block chain = 1;
    {PROTOBUF_FIELD_OFFSET(Blockchain, _impl_.chain_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::BlockchainProto::Block>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Blockchain::Clear() {
// @@protoc_insertion_point(message_clear_start:BlockchainProto.Blockchain)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.chain_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Blockchain::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Blockchain& this_ = static_cast<const Blockchain&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Blockchain::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Blockchain& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:BlockchainProto.Blockchain)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .BlockchainProto.Block chain = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_chain_size());
               i < n; i++) {
            const auto& repfield = this_._internal_chain().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:BlockchainProto.Blockchain)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Blockchain::ByteSizeLong(const MessageLite& base) {
          const Blockchain& this_ = static_cast<const Blockchain&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Blockchain::ByteSizeLong() const {
          const Blockchain& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:BlockchainProto.Blockchain)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .BlockchainProto.Block chain = 1;
             {
              total_size += 1UL * this_._internal_chain_size();
              for (const auto& msg : this_._internal_chain()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Blockchain::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Blockchain*>(&to_msg);
  auto& from = static_cast<const Blockchain&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BlockchainProto.Blockchain)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_chain()->MergeFrom(
      from._internal_chain());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Blockchain::CopyFrom(const Blockchain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BlockchainProto.Blockchain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Blockchain::InternalSwap(Blockchain* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.chain_.InternalSwap(&other->_impl_.chain_);
}

::google::protobuf::Metadata Blockchain::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace BlockchainProto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_blockchain_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
